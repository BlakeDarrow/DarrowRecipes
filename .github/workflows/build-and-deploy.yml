name: build and deploy
on: 
  push:
    branches: [ main ]
  workflow_dispatch:
  
permissions:
  contents: write
  pages: write
  id-token: write
  
jobs:
  release-recipes:
    runs-on: ubuntu-latest
    continue-on-error: true
    if: |
      (
        (contains(github.event.head_commit.message, 'edited') || contains(github.event.head_commit.message, 'created'))
        && !contains(github.event.head_commit.message, 'testing')
      )
      || github.event_name == 'workflow_dispatch'
    steps:
      - name: Set tag_name
        id: set_tag_name
        run: echo "::set-output name=tag_name::v$(date +'%m-%d-%Y-%H%M')"
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Create zip archive
        run: |
          zip -j Recipes.zip source/sphinx/recipes/*
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: All_Recipes
          path: Recipes.zip
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v2
        with:
          name: All_Recipes
      - name: Release Recipes
        uses: softprops/action-gh-release@v1
        with:
          files: Recipes.zip
          name: Recipes (.zip)
          tag_name: ${{ steps.set_tag_name.outputs.tag_name }}
      
  changelog:
    if: |
      (contains(github.event.head_commit.message, 'edited') || 
      contains(github.event.head_commit.message, 'created')) && 
      !contains(github.event.head_commit.message, 'testing') ||
      contains(github.event.head_commit.message, 'build')

    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Add build to changelog
      if: "!contains(github.event.head_commit.message, 'build')"
      run: sed -i "4i- ${{ github.event.head_commit.message }}" source/sphinx/builds.rst
    - name: Commit changes
      if: "!contains(github.event.head_commit.message, 'build')"
      uses: EndBug/add-and-commit@v7.0.0
      with:
        message: "Updated changelog"
        add: 'source/sphinx/builds.rst'
        force: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    needs: changelog
    continue-on-error: true
    # If we don't run the changelog it wasn't an automated submission, so skip the build unless explicitly asked.
    if: |
      needs.changelog.result != 'failure' &&
      needs.changelog.result != 'skipped' || 
      contains(github.event.head_commit.message, 'build')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
          python-version: '3'
          cache: 'pip'
    - uses: actions/checkout@master
    - name: Build html from Sphinx
      uses: sphinx-notes/pages@v2
      with:
        documentation_path: ./source/sphinx
        requirements_path: ./source/sphinx/requirements.txt
    - name: Push rst
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.CREATE_SITE_SECRET }}
        branch: gh-pages
        
        name: Deploy static content to Pages
    - name: git-checkout
      uses: actions/checkout@v3
    - name: Push html folder
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: gh-pages
        FOLDER: source/html
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        MESSAGE: "Build: ({sha}) {msg}"
        CLEAR_GLOBS_FILE: "./source/html/files-to-delete"

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: gh-pages
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1
